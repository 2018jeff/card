(function() {
  var TYPE_INTERVAL, USER_HAS_TYPED, clear, cursorFocus, deleteKey, startTyping, type, typeKey, wait;

  TYPE_INTERVAL = 400;

  USER_HAS_TYPED = false;

  $(document).ready(function() {
    var $input;
    $input = $('.active input[name="number"]');
    setTimeout(startTyping.bind(null, $input), 1000);
    return $('.active input').on('click keyup', function(e, data) {
      if (!data || !data.fake) {
        return USER_HAS_TYPED = true;
      }
    });
  });

  startTyping = function($input) {
    return type($input, '6545').then(wait).then(clear.bind(null, $input)).then(wait).then(type.bind(null, $input, '5423')).then(wait).then(clear.bind(null, $input)).then(wait).then(type.bind(null, $input, '3452')).then(wait).then(clear.bind(null, $input)).then(wait).then(type.bind(null, $input, '4312')).then(wait).then(clear.bind(null, $input)).then(wait.bind(null, 4000)).then(startTyping.bind(null, $input));
  };

  type = function($inp, word) {
    var promise, _type;
    promise = $.Deferred();
    _type = function($inp, word) {
      var letters;
      cursorFocus($inp);
      if (word === '') {
        return promise.resolve();
      }
      letters = word.split('');
      typeKey($inp, letters.shift());
      return setTimeout(_type.bind(null, $inp, letters.join('')), TYPE_INTERVAL);
    };
    if (!USER_HAS_TYPED) {
      _type($inp, word);
    }
    return promise;
  };

  clear = function($inp) {
    var promise, _clear;
    promise = $.Deferred();
    _clear = function($inp) {
      if ($inp.val() === '') {
        return promise.resolve();
      }
      deleteKey($inp);
      return setTimeout(_clear.bind(null, $inp), TYPE_INTERVAL / 2);
    };
    if (!USER_HAS_TYPED) {
      _clear($inp);
    }
    return promise;
  };

  wait = function(time) {
    var promise;
    time = time || TYPE_INTERVAL * 5;
    promise = $.Deferred();
    if (!USER_HAS_TYPED) {
      setTimeout(promise.resolve.bind(promise), time);
    }
    return promise;
  };

  typeKey = function($inp, letter) {
    $inp.val($inp.val() + letter);
    return $inp.trigger($.Event('keyup'), {
      fake: true
    });
  };

  deleteKey = function($inp) {
    $inp.val($inp.val().slice(0, -1));
    return $inp.trigger($.Event('keyup'), {
      fake: true
    });
  };

  cursorFocus = function(elem) {
    var x, y;
    x = window.scrollX;
    y = window.scrollY;
    elem.focus();
    return window.scrollTo(x, y);
  };

}).call(this);
